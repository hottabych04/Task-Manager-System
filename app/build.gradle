plugins {
    id 'jacoco'
}

group = 'com.hottabych04.app'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.apache.logging.log4j:log4j-spring-boot'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versions.openapi}"
    implementation "com.nimbusds:nimbus-jose-jwt:${versions.jwt}"
    implementation "org.mapstruct:mapstruct:${versions.mapstruct}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"
    implementation 'org.postgresql:postgresql'
    implementation 'org.liquibase:liquibase-core'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.testcontainers:postgresql:${versions.testcontainers}"
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/configuration/*",
                    "**/payload/*",
                    "**/database/*",
                    "**/exception/*",
                    "**/service/security/user/*",
                    "**/service/security/jwt/converter/*",
                    "**/service/security/jwt/detail/*",
                    "**/service/security/jwt/entity/*"
            ])
        }))
    }
}